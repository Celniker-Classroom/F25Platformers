new Q5();




let canjump, gameRunning;
let ball = new Sprite();
let groundB = new Sprite();
let points =0;
let idk=5;




let tilePatterns = [];
let obstacles = [];
let nextSpawnX = 800;
let spawnDistance = 1500;


let coinImg, dirtImg, fireImg, rockImg, springImg, topgrassImg;
let dirt, rock, spring, topgrass, coin, fire;




function preload() {
   coinImg = loadImage('images/coin.png');
   dirtImg = loadImage('images/dirt.png');
   fireImg = loadImage('images/fire.png');
   rockImg = loadImage('images/rock.png');
   springImg = loadImage('images/spring.png');
   topgrassImg = loadImage('images/topgrass.png');
}






function setup() {
  new Canvas();
  world.gravity.y = 10;
 

 
  canjump = true;
  gameRunning = true;
 
 
 
 
  // Ball setup
  ball.x = halfWidth - 200;
  ball.y = halfHeight;
  ball.diameter = 50;
  ball.color="purple";
 
 
 
 
  // Ground setup
  groundB.x = 400;
  groundB.width = 1000;
  groundB.height=500;
  groundB.physics = STATIC;
  groundB.y = height - 20;
  groundB.friction = 10;
  groundB.color="brown";
 
 
  // Dirt block group
 dirt = new Group();
 dirt.w = 64;
 dirt.h = 64;
 dirt.img = dirtImg;
 dirtImg.resize(128, 128);
 dirt.tile = 'd';
 dirt.physics=STATIC;
 
 
 // Rock block group
 rock = new Group();
 rock.w = 64;
 rock.h = 64;
 rock.img = rockImg;
 rockImg.resize(128, 128);
 rock.tile = 'r';
 rock.physics=STATIC;
 
 
 // Spring block group
 spring = new Group();
 spring.w = 32;
 spring.h = 32;
 spring.img = springImg;
 springImg.resize(64, 64);
 spring.tile = '^';
 spring.physics=STATIC;
 
 
 // Top grass block group
 topgrass = new Group();
 topgrass.w = 64;
 topgrass.h = 64;
 topgrass.img = topgrassImg;
 topgrassImg.resize(128, 128);
 topgrass.tile = 't';
 topgrass.physics=STATIC;
 
 
 // Coin block group
 coin = new Group();
 coin.w = 64;
 coin.h = 64;
 coin.img = coinImg;
 coinImg.resize(128, 128);
 coin.tile = 'c';
 coin.physics = STATIC;
 
 
 // Fire block group
 fire = new Group();
 fire.w = 32;
 fire.h = 32;
 fire.img = fireImg;
 fireImg.resize(64, 64);
 fire.tile = 'f';
 fire.physics = STATIC;
 
 
 
 
  //tile obstacles; same obstacles spawned but with different coin locations
  tilePatterns = [
   
   
    [
      '...............................tttttttt',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '....................^.........',
      '..............................',
      '..................ttt.........',
      '.......................r......r.',
      '....................................r',
      '...........tt.........................r',
      '.........ttdd...........................r',
      '......tttdddd.................',
      '....ttddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '^...ddddddddd ..ffffffffffffffffffffffffffffff',


    ],

    [
      '.......................................',
      '...............................tttttttt',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '....................^.........',
      '..............................',
      '..................ttt.........',
      '.......................r......r.',
      '....................................r',
      '...........tt.........................r',
      '.......c.ttdd...........................r',
      '......tttdddd.................',
      '....ttddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '^...ddddddddd ..ffffffffffffffffffffffffffffff',


    ],


    [
      '...................................c...',
      '...............................tttttttt',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '....................^.........',
      '..............................',
      '..................ttt.........',
      '.......................r......r.',
      '....................................r',
      '...........tt.........................r',
      '.........ttdd...........................r',
      '......tttdddd.................',
      '....ttddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '^...ddddddddd ..ffffffffffffffffffffffffffffff',


    ],

    [
      '...............................tttttttt',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '....................^.........',
      '..............................',
      '..................ttt.........',
      '.......................r......r.',
      '....................................r',
      '...........tt.........................r',
      '.........ttdd...........................r',
      '......tttdddd.................',
      '....ttddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '^...ddddddddd ..ffffffffffffffffffffffffffffff',


    ],

    [
      '...............................tttttttt',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '....................c.........',
      '....................^.........',
      '..............................',
      '..................ttt.........',
      '.......................r......r.',
      '....................................r',
      '...........tt.........................r',
      '.........ttdd...........................r',
      '......tttdddd.................',
      '....ttddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '....ddddddddd.................',
      '^...ddddddddd ..ffffffffffffffffffffffffffffff',


    ],
   
    [
      '...............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '.............................',
      '..............................',
      '....................................',
      '...........................................',
      '..........................................',
      '..............................',
      '...........t....c...........',
      '....t......d....r..........',
      '....d......d................',
      '....d......d.................r..',
      '....d......d...................',
      '^...dffffffdfffffffffffffffffffff',


    ],

    [
      '...............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '.............................',
      '..............................',
      '....................................',
      '...........................................',
      '..........................................',
      '..............................',
      '...........t................',
      '....t......d....r..........',
      '....d......d................',
      '....d......d.................r..',
      '....d......d...................',
      '^...dffffffdfffffffffffffffffffff',


    ],
    
    [
      '...............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..................................................',
      '...............................................ttttttt......',
      '...........................................................ttttt..',
      '..............................',
      '.....................r.....r.....r....^.',
      '..............................',
      '..............................',
      '...............tt..............',
      '...............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..^...........................',
      'ddd..ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',


    ],

    [
      '...............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..................................................',
      '...............................................ttttttt.....c',
      '...........................................................ttttt..',
      '..............................',
      '.....................r.....r.....r....^.',
      '..............................',
      '..............................',
      '...............tt..............',
      '...............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..^...........................',
      'ddd..ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',


    ],

    [
      '...............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..................................................',
      '...............................................ttttttt......',
      '...........................................................ttttt..',
      '......................................c..',
      '.....................r.....r.....r....^.',
      '..............................',
      '..............................',
      '...............tt..............',
      '...............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..............................',
      '..^...........................',
      'ddd..ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',


    ],

    [
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...................rr..................',
      '...........rr......................',
      '...rr..........................',
      'fffffffffffffffffffffffffffffff.....',


    ],

    [
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '...............................',
      '..........................c.....',
      '..........................r.....',
      '...................rr..................',
      '...........rr......................',
      '...rr..........................',
      'fffffffffffffffffffffffffffffff.....',


    ],
  ];
//coin collect
  ball.overlaps(coin, coinCollect);
 }
 
 
 
 
 
 
 function update() {
  handlePlayerMovement();
  background('skyblue');
 
 
 
 
  textAlign(CENTER);
  textSize(20);
  text('Score: '+points, halfWidth, halfHeight - 80);
 
 
 
 
  camera.x = ball.x;
  camera.y=ball.y;
 groundB.x=ball.x;
 
 
 
  // Re-enable jump if on ground or block
  if (ball.collides(groundB)||ball.collides(topgrass)||ball.collides(rock)) {
    canjump = true;
  }
  
  //collide with fire to end game
  if(ball.collides(fire)){
    gameRunning=false;
    ball.velocity.x=0;
    ball.color="skyblue";
    ball.stroke="skyblue";
  }
 
 //spring collide jump boost
 if (ball.collides(spring)) {
  ball.velocity.y = -10;
  canjump = false;
 }
 
 
  // Check collision with all current tile groups
  for (let i = 0; i < obstacles.length; i++) {
    if (ball.collides(obstacles[i])) {
      canjump = true;
    }
  }
 
 
 
 
  // Spawn new obstacles ahead of the player
  if (ball.x >= nextSpawnX - width) {
    let pattern = random(tilePatterns);
    let newGroup = spawnTileGroup(pattern, nextSpawnX);
    obstacles.push(newGroup);
    nextSpawnX += spawnDistance;
  }
 
 
 
 
  // Remove old obstacles behind player
  for (let i = obstacles.length - 1; i >= 0; i--) {
    if (obstacles[i].x + 300 < ball.x - width) {
      obstacles[i].removeAll();
      obstacles.splice(i, 1);
    }
  }
 }
 
 
 
 
 // Function to spawn a tile group at a specific X position
 function spawnTileGroup(pattern, xOffset) {
  let group = new Group();
  group.w = 32;
  group.h = 32;
  group.color = 'brown';
  group.tile = 'a';
  group.physics = STATIC;
 
 
 
 
  new Tiles(
    pattern,
    xOffset,
    height - 970,
    group.w,
    group.h,
    group
  );
 
 
 
 
  return group;
 }
 
 
 //playerMovement
 function handlePlayerMovement() {
  if(gameRunning){
  if (kb.presses('up') && canjump) {
    ball.velocity.y = -5;
    canjump = false;
  } else if (kb.pressing('left')) {
    ball.velocity.x = -5;
  } else if (kb.pressing('right')) {
    ball.velocity.x = idk;
  } else if (kb.pressing('left') && kb.pressing('right')) {
    ball.velocity.x = -5;
    ball.velocity.y = -5;
  } else if (kb.pressing('left') && kb.pressing('up')) {
    ball.velocity.x = 5;
    ball.velocity.y = -5;
  } else {
    ball.velocity.x = 0;
  }
 }
 }
 
 //coin collect function
function coinCollect(coin,ball){
  if(ball.overlaps(coin));
  ball.delete();
  points+=1;
  idk+=0.1;

}

